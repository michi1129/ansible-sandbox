# 初めてのAnsible

## 1章

### hostsファイルを書く

```hosts
myserver ansible_ssh_host=127.0.0.1 ansible_ssh_port=2222 ansible_ssh_user=vagrant ansible_ssh_private_key_file=.vagrant/machines/default/virtualbox/private_key ansible_python_interpreter=/usr/bin/python3
```

$ ansible myserver -i hosts -m ping

python3の指定をhostsに書かないときはコマンドラインのパラメタで指定する

$ ansible myserver -i hosts -m ping -e 'ansible_python_interpreter=/usr/bin/python3'

### ansible.cfgを書く

hostnameオプションは非推奨なので、inventoryを使う

### いろいろコマンドを実行してみる

$ ansible myserver -m ping
$ ansible myserver -m command -a uptime
$ ansible myserver -a "tail /var/log/dmesg" # ファイルが見つからない
$ ansible myserver -b -a "tail /var/log/syslog"

sudoになる-sオプションは-bに変更になった

$ ansible myserver -b -m apt -a name=nginx

## 2章

### vagrantを同じディレクトリで動かすようにした

### httpでwebサーバをセットアップする

web-notls.yml

### httpsでwebサーバを動かす

オレオレ証明書を生成する

$ openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -subj /CN=localhost -keyout files/nginx.key -out files/nginx.crt

daysパラメタで有効期間を絞れる

web-tls.yml

なんかエラー出たら、confファイルのテストが通るか確認してみること

## 3章

### 複数環境をまとめて立ち上げる

立ち上げたあとの接続確認
NICの情報を表示する
ただし、本に記載のあるeth0では取得できなかった
一旦vagrant sshで入ってみてifconfigでどんなNICがあるのかを参照してから
コマンドに指定してみたらうまくいった

$ ansible vag2 -a "ip addr show dev enp0s3"

複数環境でまとめてコマンドを実行する

$ ansible all -a "date"
$ ansible '*' -a "date"

## 4章

変数をplaybookに直接記入するのではなく、外のファイルに記入するようにして、
playbookからはそれを参照するようにした
